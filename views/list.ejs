<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Todo List</title>
    <link rel="stylesheet" href="/css/styles.css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body>
    <header>
        <h1>üìã My Todo List</h1>
    </header>

    <!-- ‚úÖ Task Created Alert -->
    <% if (typeof success !== "undefined" && success === "created") { %>
        <script>
            alert("‚úÖ Task created successfully!");
            if (window.history.replaceState) {
                const cleanUrl = window.location.origin + window.location.pathname;
                window.history.replaceState({}, document.title, cleanUrl);
            }
        </script>
    <% } %>

    <div class="box">
        <!-- ‚úÖ Form with HTML5 validation + JS validation -->
        <form action="/" method="POST" class="add-task-form" onsubmit="return validateForm()">
            <input type="text" name="task" placeholder="Enter a new task" required minlength="1">
            <select name="priority">
                <option value="Urgent">Urgent</option>
                <option value="High">High</option>
                <option value="Low" selected>Low</option>
            </select>
            <button type="submit">+</button>
        </form>
    </div>

    <div class="box">
        <% if (tasks.length === 0) { %>
            <p class="empty-message">No tasks added yet!</p>
        <% } else { %>
            <% tasks.forEach((task) => { %>
                <div class="item" data-id="<%= task._id %>">
                    <input type="text" value="<%= task.name %>" class="edit-task" />
                    <select class="edit-priority">
                        <option value="Urgent" <%= task.priority === "Urgent" ? "selected" : "" %>>Urgent</option>
                        <option value="High" <%= task.priority === "High" ? "selected" : "" %>>High</option>
                        <option value="Low" <%= task.priority === "Low" ? "selected" : "" %>>Low</option>
                    </select>
                    <button type="button" class="edit-btn">‚úèÔ∏è</button>
                    <button type="button" class="delete-btn">üóëÔ∏è</button>
                </div>
            <% }); %>
        <% } %>
    </div>

    <footer>
        <p>&copy; 2025 My Todo List</p>
    </footer>

    <script>
        // ‚úÖ JS validation (extra layer)
        function validateForm() {
            const taskInput = document.querySelector('input[name="task"]');
            if (taskInput.value.trim() === "") {
                alert("‚ö†Ô∏è Task cannot be empty!");
                return false;
            }
            return true;
        }

        // ‚úÖ Edit task
        document.querySelectorAll(".edit-btn").forEach(button => {
            button.addEventListener("click", async (e) => {
                const parent = e.target.closest(".item");
                const id = parent.dataset.id;
                const updatedTask = parent.querySelector(".edit-task").value.trim();
                const updatedPriority = parent.querySelector(".edit-priority").value;

                if (updatedTask === "") {
                    alert("‚ö†Ô∏è Task cannot be empty!");
                    return;
                }

                const response = await fetch(`/edit/${id}`, {
                    method: "PUT",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ updatedTask, updatedPriority })
                });

                if (response.ok) {
                    alert("‚úÖ Task updated successfully!");
                    window.location.reload();
                } else {
                    alert("‚ùå Error updating task.");
                }
            });
        });

        // ‚úÖ Delete task
        document.querySelectorAll(".delete-btn").forEach(button => {
            button.addEventListener("click", async (e) => {
                const parent = e.target.closest(".item");
                const id = parent.dataset.id;

                const response = await fetch(`/delete/${id}`, {
                    method: "DELETE"
                });

                if (response.ok) {
                    alert("üóëÔ∏è Task deleted successfully!");
                    window.location.reload();
                } else {
                    alert("‚ùå Error deleting task.");
                }
            });
        });
    </script>
</body>
</html>
